
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.1
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.1",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Category_tourismScalarFieldEnum = {
  category_id: 'category_id',
  category_name: 'category_name',
  category_desc: 'category_desc',
  category_icon: 'category_icon'
};

exports.Prisma.FacilityScalarFieldEnum = {
  facility_id: 'facility_id',
  facility_name: 'facility_name',
  facility_icon: 'facility_icon'
};

exports.Prisma.Facility_tourismScalarFieldEnum = {
  facility_tourism_id: 'facility_tourism_id',
  spot_id: 'spot_id',
  facility_id: 'facility_id'
};

exports.Prisma.GalleryScalarFieldEnum = {
  gallery_id: 'gallery_id',
  spot_id: 'spot_id',
  gallery_img: 'gallery_img',
  gallery_caption: 'gallery_caption'
};

exports.Prisma.Operating_hoursScalarFieldEnum = {
  operating_id: 'operating_id',
  spot_id: 'spot_id',
  operating_day: 'operating_day',
  hours_open: 'hours_open',
  hours_closed: 'hours_closed'
};

exports.Prisma.PaymentScalarFieldEnum = {
  payment_id: 'payment_id',
  transaction_id: 'transaction_id',
  reference_number: 'reference_number',
  payment_type: 'payment_type',
  payment_amount: 'payment_amount',
  payment_status: 'payment_status',
  payment_time: 'payment_time',
  response_data: 'response_data'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  reviews_id: 'reviews_id',
  spot_id: 'spot_id',
  user_id: 'user_id',
  reviews_rating: 'reviews_rating',
  reviews_desc: 'reviews_desc',
  reviews_created_at: 'reviews_created_at'
};

exports.Prisma.Spot_tourismScalarFieldEnum = {
  spot_id: 'spot_id',
  category_id: 'category_id',
  village_id: 'village_id',
  spot_name: 'spot_name',
  spot_desc: 'spot_desc',
  spot_address: 'spot_address',
  spot_maps: 'spot_maps',
  spot_thumbnail: 'spot_thumbnail',
  spot_rating: 'spot_rating',
  spot_contact: 'spot_contact'
};

exports.Prisma.TicketScalarFieldEnum = {
  ticket_id: 'ticket_id',
  spot_id: 'spot_id',
  ticket_name: 'ticket_name',
  ticket_price: 'ticket_price',
  ticket_desc: 'ticket_desc',
  ticket_stock: 'ticket_stock',
  code: 'code',
  url_qr: 'url_qr'
};

exports.Prisma.TransactionScalarFieldEnum = {
  transaction_id: 'transaction_id',
  user_id: 'user_id',
  transaction_code: 'transaction_code',
  total_price: 'total_price',
  transaction_status: 'transaction_status',
  transaction_date: 'transaction_date',
  visit_date: 'visit_date'
};

exports.Prisma.Transaction_detailScalarFieldEnum = {
  transaction_detail_id: 'transaction_detail_id',
  transaction_id: 'transaction_id',
  ticket_id: 'ticket_id',
  detail_quantity: 'detail_quantity',
  detail_price: 'detail_price',
  detail_subtotal: 'detail_subtotal',
  is_used: 'is_used'
};

exports.Prisma.UsersScalarFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  email: 'email',
  password: 'password',
  phone_number: 'phone_number',
  address: 'address',
  role: 'role'
};

exports.Prisma.VillageScalarFieldEnum = {
  village_id: 'village_id',
  village_name: 'village_name',
  village_city: 'village_city'
};

exports.Prisma.Temp_orderScalarFieldEnum = {
  temp_order_id: 'temp_order_id',
  order_id: 'order_id',
  user_id: 'user_id',
  visit_date: 'visit_date',
  created_at: 'created_at',
  status: 'status'
};

exports.Prisma.Temp_order_detailScalarFieldEnum = {
  temp_order_detail_id: 'temp_order_detail_id',
  temp_order_id: 'temp_order_id',
  ticket_id: 'ticket_id',
  visitor_name: 'visitor_name',
  quantity: 'quantity',
  price: 'price',
  subtotal: 'subtotal'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.category_tourismOrderByRelevanceFieldEnum = {
  category_id: 'category_id',
  category_name: 'category_name',
  category_desc: 'category_desc',
  category_icon: 'category_icon'
};

exports.Prisma.facilityOrderByRelevanceFieldEnum = {
  facility_id: 'facility_id',
  facility_name: 'facility_name',
  facility_icon: 'facility_icon'
};

exports.Prisma.facility_tourismOrderByRelevanceFieldEnum = {
  facility_tourism_id: 'facility_tourism_id',
  spot_id: 'spot_id',
  facility_id: 'facility_id'
};

exports.Prisma.galleryOrderByRelevanceFieldEnum = {
  gallery_id: 'gallery_id',
  spot_id: 'spot_id',
  gallery_img: 'gallery_img',
  gallery_caption: 'gallery_caption'
};

exports.Prisma.operating_hoursOrderByRelevanceFieldEnum = {
  operating_id: 'operating_id',
  spot_id: 'spot_id'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.paymentOrderByRelevanceFieldEnum = {
  reference_number: 'reference_number',
  payment_type: 'payment_type'
};

exports.Prisma.reviewsOrderByRelevanceFieldEnum = {
  reviews_id: 'reviews_id',
  spot_id: 'spot_id',
  user_id: 'user_id',
  reviews_desc: 'reviews_desc'
};

exports.Prisma.spot_tourismOrderByRelevanceFieldEnum = {
  spot_id: 'spot_id',
  category_id: 'category_id',
  village_id: 'village_id',
  spot_name: 'spot_name',
  spot_desc: 'spot_desc',
  spot_address: 'spot_address',
  spot_maps: 'spot_maps',
  spot_thumbnail: 'spot_thumbnail',
  spot_contact: 'spot_contact'
};

exports.Prisma.ticketOrderByRelevanceFieldEnum = {
  ticket_id: 'ticket_id',
  spot_id: 'spot_id',
  ticket_name: 'ticket_name',
  ticket_desc: 'ticket_desc',
  code: 'code',
  url_qr: 'url_qr'
};

exports.Prisma.transactionOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  transaction_code: 'transaction_code'
};

exports.Prisma.transaction_detailOrderByRelevanceFieldEnum = {
  ticket_id: 'ticket_id'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  email: 'email',
  password: 'password',
  phone_number: 'phone_number',
  address: 'address'
};

exports.Prisma.villageOrderByRelevanceFieldEnum = {
  village_id: 'village_id',
  village_name: 'village_name',
  village_city: 'village_city'
};

exports.Prisma.temp_orderOrderByRelevanceFieldEnum = {
  order_id: 'order_id',
  user_id: 'user_id'
};

exports.Prisma.temp_order_detailOrderByRelevanceFieldEnum = {
  ticket_id: 'ticket_id',
  visitor_name: 'visitor_name'
};
exports.OperatingDay = exports.$Enums.OperatingDay = {
  Senin: 'Senin',
  Selasa: 'Selasa',
  Rabu: 'Rabu',
  Kamis: 'Kamis',
  Jumat: 'Jumat',
  Sabtu: 'Sabtu',
  Minggu: 'Minggu'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  pending: 'pending',
  success: 'success',
  failed: 'failed'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  pending: 'pending',
  paid: 'paid',
  cancelled: 'cancelled'
};

exports.TicketStatus = exports.$Enums.TicketStatus = {
  unverified: 'unverified',
  verified: 'verified'
};

exports.Role = exports.$Enums.Role = {
  admin: 'admin',
  user: 'user',
  tourism_owner: 'tourism_owner'
};

exports.Prisma.ModelName = {
  category_tourism: 'category_tourism',
  facility: 'facility',
  facility_tourism: 'facility_tourism',
  gallery: 'gallery',
  operating_hours: 'operating_hours',
  payment: 'payment',
  reviews: 'reviews',
  spot_tourism: 'spot_tourism',
  ticket: 'ticket',
  transaction: 'transaction',
  transaction_detail: 'transaction_detail',
  users: 'users',
  village: 'village',
  temp_order: 'temp_order',
  temp_order_detail: 'temp_order_detail'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
